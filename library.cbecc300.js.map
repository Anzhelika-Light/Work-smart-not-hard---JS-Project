{"mappings":"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","sources":["src/js/authFireBaseLibrary.js","src/js/my-library-watched-queue/my-library-watched-queue.js","src/js/movie_modal-library.js","src/library.js"],"sourcesContent":["\n\n\n//////////////////////////////////\nimport { initializeApp } from \"firebase/app\"\nimport {\n    getAuth, signInWithEmailAndPassword,\n    createUserWithEmailAndPassword, AuthErrorCodes, onAuthStateChanged, signOut\n} from 'firebase/auth'\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport Notiflix from 'notiflix';\n\nimport { getDatabase, ref, set, child, get, push, update } from \"firebase/database\"\n\nlet currentUID = \"\";\nimport { auth } from \"./authFireBase.js\"\n//btn header switch\n\n\n\n\n\n","import Notiflix from 'notiflix';\nimport { renderMoviesLibrary } from './renderMoviesLibrary';\n//import { userDataQueue, userDataWatched } from './data-template-local-storage';\nimport { spinnerStart, spinnerStop } from '../loader';\nimport fetchPopularFilms from '../trending-search-main/fetch-movies';\nimport { readAllUserData, currentUID, auth } from '../authFireBase.js';\nimport { async } from '@firebase/util';\n\nconst watchedBtnEl = document.querySelector('.js-library-btn--watched');\nconst queueBtnEl = document.querySelector('.js-library-btn--queue');\nconst movieListEl = document.querySelector('.movie-list');\n\n// --дефолт інфа в бібліотеці\n\nasync function defaultLibrary() {\n  // minPage = Math.ceil(1);\n  // maxPage = Math.floor(100);\n  const minPage = 1;\n  const maxPage = 100;\n  let page = Math.floor(Math.random() * (maxPage - minPage + 1) + minPage);\n  try {\n    const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n    movieListEl.innerHTML = '';\n    const films = await fetchPopularFilms(page);\n\n    // console.log(films.results);\n\n    const markup = `<h3 class='library-gallery-recomend'>RECOMMENDATIONS</h3><div class='library-gallery__default'><img class='library-gallery__default-poster' data-id='${films.results[1].id}' src=${IMG_PATH}${films.results[1].poster_path}>\n    <div><p class='library-gallery__default__title'>${films.results[1].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[1].overview}</p></div>\n    </div>\n    \n    <div class='library-gallery__default'><img class='library-gallery__default-poster' src=${IMG_PATH}${films.results[2].poster_path} data-id='${films.results[2].id}'>\n    <div><p class='library-gallery__default__title'>${films.results[2].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[2].overview}</p></div>\n    </div>\n    \n    <div class='library-gallery__default'><img class='library-gallery__default-poster' src=${IMG_PATH}${films.results[3].poster_path} data-id='${films.results[3].id}'>\n    <div><p class='library-gallery__default__title'>${films.results[3].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[3].overview}</p></div>\n    </div>`;\n    // console.log(markup);\n\n    movieListEl.innerHTML = markup;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ndefaultLibrary();\n// --/дефолт інфа в бібліотеці\n\n// при натисканні на Watched\nexport async function onWatchedBtnClick() {\n  spinnerStart();\n  setTimeout(spinnerStop, 500);\n  queueBtnEl.style.background = 'transparent';\n  queueBtnEl.style.borderColor = '#ffffff';\n\n  watchedBtnEl.style.background = '#ff6b01';\n  watchedBtnEl.style.borderColor = '#ff6b01';\n  if (auth.currentUser === null) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>It seems you haven't watched any movie. You should try, it's fun🎭</p>\";\n    return;\n  }\n  const movieWatched = await readAllUserData(auth.currentUser.uid);\n  if (movieWatched.userDataWatch === undefined) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>It seems you haven't watched any movie. You should try, it's fun🎭</p>\";\n\n    return;\n  }\n  console.log(movieWatched);\n  if (Object.keys(movieWatched).length === 1) {\n    movieListEl.innerHTML =\n      \"<p>It seems you haven't watched any movie. You should try, it's fun🎭</p>\";\n    return;\n  }\n  const moviesCards = movieWatched.userDataWatch\n    .map(movie => {\n      return renderMoviesLibrary(movie);\n    })\n    .join('');\n  movieListEl.innerHTML = moviesCards;\n}\n\nexport async function onQueueBtnClick() {\n  spinnerStart();\n  setTimeout(spinnerStop, 500);\n  queueBtnEl.style.background = '#ff6b01';\n  queueBtnEl.style.borderColor = '#ff6b01';\n\n  watchedBtnEl.style.background = 'transparent';\n  watchedBtnEl.style.borderColor = '#ffffff';\n\n  if (auth.currentUser === null) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>The queue is empty. Add all Harry Potter movies - you won't regret this✨</p>\";\n    return;\n  }\n  const movieQueue = await readAllUserData(auth.currentUser.uid);\n  console.log(movieQueue);\n  if (movieQueue.userDataQueue === undefined) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>The queue is empty. Add all Harry Potter movies - you won't regret this✨</p>\";\n    return;\n  }\n  if (Object.keys(movieQueue).length === 1) {\n    movieListEl.innerHTML =\n      \"<p>The queue is empty. Add all Harry Potter movies - you won't regret this✨</p>\";\n    return;\n  }\n\n  const moviesCards = movieQueue.userDataQueue\n    .map(movie => {\n      return renderMoviesLibrary(movie);\n    })\n    .join('');\n  movieListEl.innerHTML = moviesCards;\n}\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n\n// localStorage functions\n\n/*import Notiflix from 'notiflix';\nimport { renderMoviesLibrary } from './renderMoviesLibrary';\nimport { userDataQueue, userDataWatched } from './data-template-local-storage';\nimport { spinnerStart, spinnerStop } from '../loader';\nimport fetchPopularFilms from '../trending-search-main/fetch-movies';\n\nconst watchedBtnEl = document.querySelector('.js-library-btn--watched');\nconst queueBtnEl = document.querySelector('.js-library-btn--queue');\nconst movieListEl = document.querySelector('.movie-list');\n\n// --дефолт інфа в бібліотеці\n\nasync function defaultLibrary() {\n  minPage = Math.ceil(1);\n  maxPage = Math.floor(100);\n  let page = Math.floor(Math.random() * (maxPage - minPage + 1) + minPage);\n\n  try {\n    const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n    movieListEl.innerHTML = '';\n    const films = await fetchPopularFilms(page);\n\n    const markup = `<h3 class='library-gallery-recomend'>RECOMENDATIONS</h3><div class='library-gallery__default'><img class='library-gallery__default-poster' src=${IMG_PATH}${films.results[1].poster_path}>\n    <div><p class='library-gallery__default__title'>${films.results[1].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[1].overview}</p></div>\n    </div>\n    \n    <div class='library-gallery__default'><img class='library-gallery__default-poster' src=${IMG_PATH}${films.results[2].poster_path}>\n    <div><p class='library-gallery__default__title'>${films.results[2].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[2].overview}</p></div>\n    </div>\n    \n    <div class='library-gallery__default'><img class='library-gallery__default-poster' src=${IMG_PATH}${films.results[3].poster_path}>\n    <div><p class='library-gallery__default__title'>${films.results[3].title}</p>\n    <p class='library-gallery__default-overview'>${films.results[3].overview}</p></div>\n    </div>`;\n\n    movieListEl.innerHTML = markup;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ndefaultLibrary();\n// --/дефолт інфа в бібліотеці\n\n// при натисканні на Watched\nfunction onWatchedBtnClick() {\n  spinnerStart();\n\n  const movieWatched = gettingItem('movieWatched');\n  if (movieWatched.length === 0) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>It seems you haven't watched any movie. You should try, it's fun🎭</p>\";\n    setTimeout(spinnerStop, 500);\n\n    return;\n  }\n  const moviesCards = movieWatched\n    .map(movie => {\n      return renderMoviesLibrary(movie);\n    })\n    .join('');\n  movieListEl.innerHTML = moviesCards;\n  setTimeout(spinnerStop, 500);\n}\n\nfunction onQueueBtnClick() {\n  spinnerStart();\n\n  const movieQueue = gettingItem('movieQueue');\n\n  if (movieQueue.length === 0) {\n    movieListEl.innerHTML =\n      \"<p class='no-movies'>The queue is empty. Add all Harry Potter movies - you won't regret this✨</p>\";\n    setTimeout(spinnerStop, 500);\n\n    return;\n  }\n\n  const moviesCards = movieQueue\n    .map(movie => {\n      return renderMoviesLibrary(movie);\n    })\n    .join('');\n  movieListEl.innerHTML = moviesCards;\n\n  setTimeout(spinnerStop, 500);\n}\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n\n// localStorage functions\nfunction gettingItem(key) {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.log('Everyone makes mistakes, this is yours:', error.message);\n  }\n}*/\n","import { auth, writeUserDataQueue, writeUserDataWatch, currentFilmList, readAllUserData } from './authFireBase.js'\nimport { spinnerStart, spinnerStop } from './loader.js';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport { renderModal } from './render_modal';\nimport { onTrailerBtnClick } from './trailer';\nimport { all, AxiosHeaders } from 'axios';\nimport { fetchMovie } from './fetch_movie_details';\nimport TmdbAPI from './TMDB_API';\nimport { onWatchedBtnClick } from './my-library-watched-queue/my-library-watched-queue';//add\nimport { onQueueBtnClick } from './my-library-watched-queue/my-library-watched-queue';//add\nimport { async } from '@firebase/util';\n\n/*const {\n  allCardsSection,\n  modal,\n  overflow,\n  closeBtn,\n  innerModal,\n  body,\n  sectionLibrary,//add\n} = refs;\n// Наступні два рядки - додавання даних в об'єкти з local storage для коректного відображення кнопок і роботи\nlet queue = JSON.parse(localStorage.getItem('movieQueue')) || [];\nlet watched = JSON.parse(localStorage.getItem('movieWatched')) || [];\n// allCardsSection.addEventListener('click', showModal);\nsectionLibrary.addEventListener('click', showModal);\n\nfunction updateMoviesList() {\n  const allMoviesListFromStorage = localStorage.getItem('currentFilmList');\n  const allMoviesList = JSON.parse(allMoviesListFromStorage);\n  return allMoviesList;\n}\nexport async function showModal(e) {\n  if (e.target.nodeName === 'IMG' || e.target.nodeName === 'SPAN') {\n    modal.classList.remove('hidden-movie-modal');\n    overflow.classList.remove('hidden-movie-modal');\n    overflow.classList.add('overflow-height');\n\n    // allCardsSection.removeEventListener('click', showModal);\n    sectionLibrary.removeEventListener('click', showModal);\n\n    document.addEventListener('keydown', closeModalOnEsc);\n    closeBtn.addEventListener('click', closeModal);\n    overflow.addEventListener('click', closeModalOverflow);\n\n    const id =\n      e.target.nodeName === 'IMG'\n        ? e.target.dataset.id\n        : e.target.closest('li').dataset.id;\n    await createModal(id);\n    const top = window.scrollY;\n    body.style.position = 'fixed';\n    body.style.top = `-${top}px`;\n    // Далі в цій функціїї навісила обробників подій.\n    const watchedBtn = document.querySelector('.modal__btn-watched');\n    const queueBtn = document.querySelector('.modal__btn-queue');\n    const watchTrailerBtn = document.querySelector(\n      '.movie-modal__btn-watch-trailer'\n    );\n    watchedBtn.addEventListener('click', handleWatched);\n    queueBtn.addEventListener('click', handleQueued);\n    watchTrailerBtn.addEventListener('click', onTrailerBtnClick);\n  }\n}\nfunction closeModalOverflow(e) {\n  if (e.currentTarget === e.target) closeModal();\n}\nfunction closeModalOnEsc(e) {\n  if (e.code === 'Escape') closeModal();\n}\nfunction closeModal() {\n  modal.classList.add('hidden-movie-modal');\n  overflow.classList.add('hidden-movie-modal');\n  overflow.classList.remove('overflow-height');//add\n\n  // allCardsSection.addEventListener('click', showModal);\n  sectionLibrary.addEventListener('click', showModal);\n\n  document.removeEventListener('keydown', closeModal);\n  closeBtn.removeEventListener('click', closeModal);\n  overflow.removeEventListener('click', closeModalOverflow);\n  const top = body.style.top;\n  body.style.position = '';\n  body.style.top = '';\n  window.scrollTo(0, parseInt(top || '0') * -1);\n}\n\nasync function createModal(id) {\n  const currentList = updateMoviesList();\n  const rendered = await renderModal(currentList, id, watched, queue);\n\n  innerModal.innerHTML = rendered;\n}\n// Далі і до кінця йдуть два обробники: watched i queue, які самі вирішують, додавати чи видаляти в результаті перевірки\nasync function handleWatched(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n  const isInWatched = watched.some(film => film.id === movie.id);\n  console.dir(e.target);\n  if (e.target.innerText === 'ADD TO WATCHED') {\n    if (!isInWatched) {\n      watched.push(movie);\n      localStorage.setItem('movieWatched', JSON.stringify(watched));\n      e.target.innerText = 'Remove from watched';\n      const saved = JSON.parse(localStorage.getItem('movieWatched'));\n      // e.target.addEventListener('click', removeFromWatched);\n      // e.target.removeEventListener('click', addToWatched);\n      Notiflix.Notify.success('Added to watched!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM WATCHED') {\n    watched = watched.filter(film => film.id !== movie.id);\n    localStorage.setItem('movieWatched', JSON.stringify(watched));\n    e.target.innerText = 'Add to watched';\n    onWatchedBtnClick();\n\n    // e.target.removeEventListener('click', removeFromWatched);\n    // e.target.addEventListener('click', addToWatched);\n    Notiflix.Notify.success('Removed from watched!');\n  }\n}\nasync function handleQueued(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n  const isInQueued = queue.some(film => film.id === movie.id);\n  console.dir(e.target);\n  if (e.target.innerText === 'ADD TO QUEUE') {\n    if (!isInQueued) {\n      queue.push(movie);\n      localStorage.setItem('movieQueue', JSON.stringify(queue));\n      e.target.innerText = 'Remove from queue';\n      // e.target.addEventListener('click', removeFromWatched);\n      // e.target.removeEventListener('click', addToWatched);\n      Notiflix.Notify.success('Added to queue!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM QUEUE') {\n    queue = queue.filter(film => film.id !== movie.id);\n    localStorage.setItem('movieQueue', JSON.stringify(queue));\n    e.target.innerText = 'Add to queue';\n    onQueueBtnClick();\n    // e.target.removeEventListener('click', removeFromWatched);\n    // e.target.addEventListener('click', addToWatched);\n    Notiflix.Notify.success('Removed from queue!');\n  }\n}*/\n\n\n\n\n\nconst { allCardsSection, modal, overflow, closeBtn, innerModal, body, sectionLibrary } = refs;\n// Наступні два рядки - додавання даних в об'єкти з local storage для коректного відображення кнопок і роботи\nlet queue;\nlet watched;\nasync function updateVar() {\n  if (auth.currentUser === null) {\n    console.log(auth);\n    queue = [];\n    watched = [];\n  }\n  else {\n    const q = await readAllUserData(auth.currentUser.uid);\n    const w = await readAllUserData(auth.currentUser.uid)\n    queue = q.userDataQueue || [];\n    watched = w.userDataWatch || [];\n  }\n\n}\n//\n\nsetTimeout(() => {\n  updateVar();\n}, 2500)\n\nsectionLibrary.addEventListener('click', showModal);\n\nasync function updateMoviesList() {\n\n  if (auth.currentUser === null) {\n    const allMoviesListFromStorage = localStorage.getItem('currentFilmList');\n    const allMoviesList = JSON.parse(allMoviesListFromStorage);\n    return allMoviesList;\n  }\n  else {\n    try {\n      const allMoviesListFromStorage = await currentFilmList(auth.currentUser.uid);\n      console.log(allMoviesListFromStorage);\n      const allMoviesList = allMoviesListFromStorage.currentFilmList || [];\n      return allMoviesList;\n    }\n    catch {\n      return [];\n    }\n  }\n\n}\nexport async function showModal(e) {\n  if (e.target.nodeName === 'IMG' || e.target.nodeName === 'SPAN') {\n    modal.classList.remove('hidden-movie-modal');\n    overflow.classList.remove('hidden-movie-modal');\n    overflow.classList.add('overflow-height');\n    sectionLibrary.removeEventListener('click', showModal);\n    document.addEventListener('keydown', closeModalOnEsc);\n    closeBtn.addEventListener('click', closeModal);\n    overflow.addEventListener('click', closeModalOverflow);\n\n    const id =\n      e.target.nodeName === 'IMG'\n        ? e.target.dataset.id\n        : e.target.closest('li').dataset.id;\n    await createModal(id);\n    const top = window.scrollY;\n    body.style.position = 'fixed';\n    body.style.top = `-${top}px`;\n    // Далі в цій функціїї навісила обробників подій.\n    const watchedBtn = document.querySelector('.modal__btn-watched');\n    const queueBtn = document.querySelector('.modal__btn-queue');\n    const watchTrailerBtn = document.querySelector(\n      '.movie-modal__btn-watch-trailer'\n    );\n    if (auth.currentUser !== null) {\n      watchedBtn.addEventListener('click', handleWatched);\n      queueBtn.addEventListener('click', handleQueued);\n\n    }\n    else {\n      watchedBtn.setAttribute(\"disabled\", \"disabled\");\n      queueBtn.setAttribute(\"disabled\", \"disabled\");\n    }\n    watchTrailerBtn.addEventListener('click', onTrailerBtnClick);\n  }\n}\nfunction closeModalOverflow(e) {\n  if (e.currentTarget === e.target) closeModal();\n}\nfunction closeModalOnEsc(e) {\n  if (e.code === 'Escape') closeModal();\n}\nfunction closeModal() {\n  modal.classList.add('hidden-movie-modal');\n  overflow.classList.add('hidden-movie-modal');\n  overflow.classList.remove('overflow-height');\n  sectionLibrary.addEventListener('click', showModal);\n  document.removeEventListener('keydown', closeModal);\n  closeBtn.removeEventListener('click', closeModal);\n  overflow.removeEventListener('click', closeModalOverflow);\n  const top = body.style.top;\n  body.style.position = '';\n  body.style.top = '';\n  window.scrollTo(0, parseInt(top || '0') * -1);\n}\n\nasync function createModal(id) {\n\n  if (auth.currentUser === null) {\n    const currentList = updateMoviesList();\n    const rendered = await renderModal(currentList, id, watched, queue);\n    innerModal.innerHTML = rendered;\n  }\n  else {\n    await updateVar();\n    const currentList = await updateMoviesList();\n    const rendered = await renderModal(currentList, id, watched, queue);\n    innerModal.innerHTML = rendered;\n  }\n\n\n\n}\n\nasync function handleWatched(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n\n  const isInWatched = watched.some(film => film.id === movie.id);\n\n\n  if (e.target.innerText === 'ADD TO WATCHED') {\n    if (!isInWatched) {\n      watched.push(movie);\n      if (auth.currentUser === null) {\n        localStorage.setItem('movieWatched', JSON.stringify(watched));\n        e.target.innerText = 'Remove from watched';\n        const saved = JSON.parse(localStorage.getItem('movieWatched'));\n      }\n      else {\n        await writeUserDataWatch(auth.currentUser.uid, watched);\n        e.target.innerText = 'Remove from watched';\n        const w = await readAllUserData(auth.currentUser.uid)\n        const saved = w.userDataWatch || [];\n      }\n\n      onWatchedBtnClick();\n      Notiflix.Notify.success('Added to watched!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM WATCHED') {\n    watched = watched.filter(film => film.id !== movie.id);\n    if (auth.currentUser === null) {\n      localStorage.setItem('movieWatched', JSON.stringify(watched));\n    }\n    else {\n      await writeUserDataWatch(auth.currentUser.uid, watched);\n    }\n    e.target.innerText = 'Add to watched';\n    onWatchedBtnClick();\n    Notiflix.Notify.success('Removed from watched!');\n  }\n}\nasync function handleQueued(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n\n\n  const isInQueued = queue.some(film => film.id === movie.id);\n  if (e.target.innerText === 'ADD TO QUEUE') {\n    if (!isInQueued) {\n      queue.push(movie);\n      if (auth.currentUser === null) localStorage.setItem('movieQueue', JSON.stringify(queue));\n      else {\n        await writeUserDataQueue(auth.currentUser.uid, queue);\n      }\n      e.target.innerText = 'Remove from queue';\n      onQueueBtnClick();\n      Notiflix.Notify.success('Added to queue!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM QUEUE') {\n    queue = queue.filter(film => film.id !== movie.id);\n    if (auth.currentUser === null) {\n      localStorage.setItem('movieQueue', JSON.stringify(queue));\n    }\n    else {\n      await writeUserDataQueue(auth.currentUser.uid, queue);\n    }\n\n    e.target.innerText = 'Add to queue';\n    onQueueBtnClick();\n    Notiflix.Notify.success('Removed from queue!');\n  }\n}\n","import './js/authFireBaseLibrary.js';\nimport './js/openModalWindow.js';\nimport './js/my-library-watched-queue/my-library-watched-queue';\nimport './js/dark-mode';\nimport './js/footer-modal';\nimport { spinnerStart, spinnerStop } from './js/loader';\nspinnerStart();\nsetTimeout(spinnerStop, 1000);\nimport './js/scroll_to_top';\nimport './js/movie_modal-library.js';\nimport './js/openModalWindow.js';\n"],"names":["parcelRequire","$bpxeT","$769382ea8cae2491$var$watchedBtnEl","document","querySelector","$769382ea8cae2491$var$queueBtnEl","$769382ea8cae2491$var$movieListEl","$769382ea8cae2491$var$_defaultLibrary","$parcel$interopDefault","$2TvXO","mark","_callee","page","IMG_PATH","films","markup","Math","floor","random","innerHTML","$asGRZ","default","_ctx","sent","concat","results","id","poster_path","title","overview","console","log","t0","apply","this","arguments","$769382ea8cae2491$export$852eb21c65e590aa","$769382ea8cae2491$var$_onWatchedBtnClick","movieWatched","moviesCards","$kvC6y","spinnerStart","setTimeout","spinnerStop","style","background","borderColor","$9t7bQ","auth","currentUser","readAllUserData","uid","undefined","userDataWatch","Object","keys","length","map","movie","$a9ZY8","renderMoviesLibrary","join","$769382ea8cae2491$export$47c64e1cb6fdbeb7","$769382ea8cae2491$var$_onQueueBtnClick","movieQueue","userDataQueue","$769382ea8cae2491$var$defaultLibrary","addEventListener","$4Nugj","refs","allCardsSection","$8190bc97d9d4f811$var$queue","$8190bc97d9d4f811$var$watched","$8190bc97d9d4f811$var$modal","modal","$8190bc97d9d4f811$var$overflow","overflow","$8190bc97d9d4f811$var$closeBtn","closeBtn","$8190bc97d9d4f811$var$innerModal","innerModal","$8190bc97d9d4f811$var$body","body","$8190bc97d9d4f811$var$sectionLibrary","sectionLibrary","$8190bc97d9d4f811$var$updateVar","$8190bc97d9d4f811$var$_updateVar","q","w","$8190bc97d9d4f811$var$updateMoviesList","$8190bc97d9d4f811$var$_updateMoviesList","allMoviesListFromStorage","allMoviesList","allMoviesListFromStorage1","allMoviesList1","localStorage","getItem","JSON","parse","currentFilmList","$8190bc97d9d4f811$export$d7e8d4d4450c819c","e","$8190bc97d9d4f811$var$_showModal","top","watchedBtn","queueBtn","watchTrailerBtn","target","nodeName","classList","remove","add","removeEventListener","$8190bc97d9d4f811$var$closeModalOnEsc","$8190bc97d9d4f811$var$closeModal","$8190bc97d9d4f811$var$closeModalOverflow","dataset","closest","$8190bc97d9d4f811$var$createModal","window","scrollY","position","$8190bc97d9d4f811$var$handleWatched","$8190bc97d9d4f811$var$handleQueued","setAttribute","$cDXQO","onTrailerBtnClick","currentTarget","code","scrollTo","parseInt","$8190bc97d9d4f811$var$_createModal","currentList","rendered","currentList1","rendered1","$h9dm7","renderModal","$8190bc97d9d4f811$var$_handleWatched","modalEl","isInWatched","poster","genre_ids","genres","release_date","date","vote_average","votes","some","film","innerText","push","setItem","stringify","writeUserDataWatch","$6JpON","Notify","success","filter","$8190bc97d9d4f811$var$_handleQueued","isInQueued","writeUserDataQueue"],"version":3,"file":"library.cbecc300.js.map"}